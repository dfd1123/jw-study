1. 'main.js'에 dialogNmodal 플러그인과 vuescroll 라이브러리를 설치/적용시켜 주세요.

// in '/src/main.js'
import vueScroll from "vuescroll/dist/vuescroll-native";
import "vuescroll/dist/vuescroll.css";
import dialogNmodal from "./plugins/dialogNmodal";

Vue.use(vueScroll);
Vue.use(dialogNmodal);


2. dialog($alert, $confirm, $propmt)의 사용법은 다음과 같습니다.

<template>
  <div id="test">
    <button @click="confirm">Confirm</button>
    <button @click="alert">Alert</button>
    <button @click="prompt">Prompt</button>
  </div>
</template>

<script>
export default {
  name: "SampleDialog",
  methods: {
    async confirm() {
      const result = await this.$confirm("당신은 김종완?");
      alert(result);
    },
    async alert() {
      const result = await this.$alert("알러트 성공!!");
      alert(result);
    },
    async prompt() {
      const result = await this.$prompt("당신의 이름을 적어주세요");
      alert(result);
    },
  },
};
</script>


3. dialog API는 다음과 같습니다.

// $alert API

**** $alert(<(Object or String):required>) ****

첫번째 인자의 데이터 타입은 Object이나 String이며

Object일 경우 
{
  title: "", // option
  message: "", // required
  button: {   // option
    text: "확인",
  },
}

String일 경우는 message로 들어갑니다.
반환값은 true 입니다.


**** $confirm(<(Object or String):required>) ****

첫번째 인자의 데이터 타입은 Object이나 String이며

Object일 경우 
{
  title: "", // option
  message: "", // required
  button: {   // option
    yes: {
      text: "예",
      value: true,
    },
    no: {
      text: "아니오",
      value: false,
    },
}

String일 경우는 message로 들어갑니다.
반환값은 true or flase 입니다.


**** $prompt(<(Object or String):required>) ****

첫번째 인자의 데이터 타입은 Object이나 String이며

Object일 경우 
{
  title: "", // option
  message: "", // required
  button: {   // option
    yes: {
      text: "확인",
      value: true,
    },
    no: {
      text: "취소",
      value: false,
    },
  },
}

String일 경우는 message로 들어갑니다.
반환값은 String or (flase or null or undefined) 입니다.


4. $modal의 사용법은 다음과 같습니다.

<template>
  <div>
    <button @click="modal">모달 테스트</button>
  </div>
</template>

<script>
import SampleModal from "@/components/SampleModal";

export default {
  name: "ModalTest",
  methods: {
    modal() {
      this.$modal(SampleModal, { transitionMode: "fade" });
    },
  },
};
</script>


5. $modal API는 다음과 같습니다.

$modal(<Object:required>, <Object:option>)

첫번째 인자는 ModalContainer에 들어갈 모달 컨텐츠 부분의 component입니다.
두번째 인자의 역할은 띄워줄 모달 component가 받을 정보들을 객체에 담아 보내는 것이며 두번째 인자를 주지 않으면
빈 객체로 전달됩니다.

두번째 인자에 객체에다가 'transitionMode' 인스턴스를 넣으면 transition 효과를 설정할 수 있습니다.







